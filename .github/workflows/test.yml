name: Tests
on: push
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: 1.x

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Test
      run: go test ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    needs:
      - test
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.x

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/overmindtech/stdlib-source
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: build/package/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
