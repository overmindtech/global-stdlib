name: Test & Build
on: push
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: 1.x

    # Get values for cache paths to be used in later steps
    - name: Configure go caching
      id: go-cache-paths
      run: |
        echo "go-build=$(go env GOCACHE)" >> $GITHUB_OUTPUT
        echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

    # Cache go mod cache, used to speedup builds
    - name: Go Mod Cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.go-cache-paths.outputs.go-mod }}
        key: ${{ runner.os }}-test-go-mod-${{ hashFiles('**/go.sum') }}

    # Cache go build cache, used to speedup go test
    - name: Go Build Cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.go-cache-paths.outputs.go-build }}
        key: ${{ runner.os }}-test-go-build-${{ hashFiles('**/go.sum') }}

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Go Vet
      run: go vet ./...

    - name: Test
      run: go test ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    needs:
      - test
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.x

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/overmindtech/stdlib-source
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: build/package/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      - name: Prepare Deployment
        run: |
          echo "ghcr.io/overmindtech/stdlib-source@${{ steps.push.outputs.digest }}" | tee stdlib-source.imageref

      - name: Upload Deployment File
        uses: actions/upload-artifact@v3
        with:
          name: stdlib-source.imageref
          path: stdlib-source.imageref
